class Paletteron{static MAX_COLORS_AMOUNT=16777216;static MAX_COLORS_SPACE_DISTANCE=443.405;constructor(e,t,r,a,o){if(e&&(e<1||e>Paletteron.MAX_COLORS_AMOUNT))throw new Error(`Colors to pick must be between 1 and ${Paletteron.MAX_COLORS_AMOUNT}.`);if(r&&(r<0||r>1))throw new Error("Min coverage must be between 0 and 1.");if(a&&(a<0||a>1))throw new Error("Ignore bright must be between 0 and 1.");if(o&&(o<0||o>1))throw new Error("Ignore dark must be between 0 and 1.");switch(this.colorsToPick=e||5,this.speed=t||"medium",this.minCoverage=r||0,this.minWhiteDistance=a||0,this.minBlackDistance=o||0,this.speed){case"fast":this.averageColorDistanceJump=8,this.scale=.2;break;case"medium":this.averageColorDistanceJump=5,this.scale=.3;break;case"slow":this.averageColorDistanceJump=3,this.scale=.5;break;default:averageColorDistanceJump=5,this.scale=.3}}getPalette(e,t=!1){t&&(e.crossOrigin="anonymous");const[r,a]=this.downscale(e),o=this.extractPixels(a),s=this.flattenColors(o),n=this.removeBrightDarkColors(s),i=this.removeLowCoverageColors(n,o.length),c=this.bundleColors(i),l=this.calculateScore(c),h=this.finalizeColors(l);return r.remove(),h}printDebuggingPalette(e,t){t.innerHTML="";for(const r of e){const e=document.createElement("div");e.style.backgroundColor=`rgb(${r[0]}, ${r[1]}, ${r[2]})`;const a=document.createTextNode(`rgb(${r[0]}, ${r[1]}, ${r[2]})`);e.appendChild(a),t.appendChild(e)}}downscale(e){const t=e.width*this.scale,r=e.height*this.scale,a=document.createElement("canvas");a.width=t,a.height=r;const o=a.getContext("2d");return o.drawImage(e,0,0,t,r),[a,o]}removeBrightDarkColors(e){return 0===this.minBlackDistance&&0===this.minWhiteDistance?e:e.filter((e=>{const t=Paletteron.MAX_COLORS_SPACE_DISTANCE*this.minBlackDistance,r=Paletteron.MAX_COLORS_SPACE_DISTANCE*this.minWhiteDistance;return this.calculateDistance([e.r,e.g,e.b],[255,255,255])>r&&this.calculateDistance([e.r,e.g,e.b],[0,0,0])>t}))}extractPixels(e){const t=new Array(256).fill(0).map((()=>new Array(256).fill(0).map((()=>new Array(256).fill(0))))),r=e.getImageData(0,0,e.canvas.width,e.canvas.height);for(let e=0;e<r.data.length;e+=4){const a=r.data[e],o=r.data[e+1],s=r.data[e+2];t[a][o][s]++}return t}flattenColors(e){const t=[];for(let r=0;r<e.length;r++)for(let a=0;a<e[r].length;a++)for(let o=0;o<e[r][a].length;o++){const s=e[r][a][o];s>0&&t.push({r:r,g:a,b:o,amount:s,score:0})}return t}removeLowCoverageColors(e,t){const r=t*this.minCoverage;return e.filter((e=>e.amount>=r))}findAverageColorDistance(e){let t=0,r=0;for(let a=0;a<e.length+this.averageColorDistanceJump;a+=this.averageColorDistanceJump)for(let o=a+this.averageColorDistanceJump;o<e.length;o+=this.averageColorDistanceJump)t+=this.calculateDistance([e[a].r,e[a].g,e[a].b],[e[o].r,e[o].g,e[o].b]),r++;return t/r}bundleColors(e){const t=this.findAverageColorDistance(e);e.sort(((e,t)=>t.amount-e.amount));for(let r=0;r<e.length;r++)for(let a=r+1;a<e.length;a++)if(this.calculateDistance([e[r].r,e[r].g,e[r].b],[e[a].r,e[a].g,e[a].b])<t){const o=this.calculateDistance([e[r].r,e[r].g,e[r].b],[e[a].r,e[a].g,e[a].b])/t;e[r].amount+=e[a].amount*o,e.splice(a,1),a--}return e}calculateDistance(e,t){const r=e[0]-t[0],a=e[1]-t[1],o=e[2]-t[2];return Math.sqrt(r*r+a*a+o*o)}findColorsCenter(e,t){t||(t=e.length);let r=[0,0,0];for(let a=0;a<t;a++)r[0]+=e[a].r,r[1]+=e[a].g,r[2]+=e[a].b;return r[0]/=t,r[1]/=t,r[2]/=t,r}calculateAverageDistanceToCenter(e){const t=this.findColorsCenter(e);let r=0;for(const a of e)r+=this.calculateDistance([a.r,a.g,a.b],t);return r/e.length}calculateScore(e){const t=e.reduce(((e,t)=>e+t.amount),0),r=this.findColorsCenter(e),a=this.calculateAverageDistanceToCenter(e);for(const o of e)o.score+=o.amount/t,o.score+=this.calculateDistance([o.r,o.g,o.b],r)/a*Math.log(o.amount);return e.sort(((e,t)=>t.score-e.score)),e}finalizeColors(e){e.sort(((e,t)=>t.score-e.score));return(e=e.slice(0,this.colorsToPick)).map((e=>[e.r,e.g,e.b]))}}